{"mappings":"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","sources":["main.js"],"sourcesContent":["// Constants\r\nconst POKEMON_API_BASE_URL = 'https://pokeapi.co/api/v2';\r\nconst POKEMON_PER_PAGE = 151;\r\nconst MAX_POKEMON_ID = 1008; // Limit to prevent loading non-existent Pokemon\r\n\r\n// DOM Elements\r\nconst pokemonList = document.getElementById('pokemonList');\r\nconst searchInput = document.getElementById('searchInput');\r\nconst searchButton = document.getElementById('searchButton');\r\nconst searchModal = document.getElementById('searchModal');\r\nconst searchResults = document.getElementById('searchResults');\r\nconst closeModal = document.getElementById('closeModal');\r\n\r\n// State\r\nlet currentPage = 1;\r\nlet loading = false;\r\nlet hasMorePokemon = true;\r\nlet loadedPokemon = new Set(); // Track loaded Pokemon IDs\r\nlet favorites = new Set(); // Using Set instead of Map for simpler storage\r\n\r\nconst addToFavorites = pokemon => {\r\n  let favorites = JSON.parse(localStorage.getItem('pokeArray')) || [];\r\n\r\n  // Create an object with necessary Pokémon details\r\n  const pokemonData = {\r\n    id: pokemon.id,\r\n    name: pokemon.name,\r\n    image:\r\n      pokemon.sprites.other['official-artwork'].front_default ||\r\n      pokemon.sprites.front_default,\r\n    type: pokemon.types.map(t => t.type.name).join(', '),\r\n    hp: pokemon.stats[0].base_stat,\r\n    attack: pokemon.stats[1].base_stat,\r\n    defense: pokemon.stats[2].base_stat,\r\n    speed: pokemon.stats[5].base_stat,\r\n  };\r\n\r\n  // Check if Pokémon is already in favorites\r\n  const exists = favorites.some(fav => fav.id === pokemon.id);\r\n\r\n  if (!exists) {\r\n    favorites.push(pokemonData);\r\n  } else {\r\n    favorites = favorites.filter(fav => fav.id !== pokemon.id); // Remove if already favorited\r\n  }\r\n\r\n  // Save back to localStorage\r\n  localStorage.setItem('pokeArray', JSON.stringify(favorites));\r\n};\r\n\r\n// Load favorites from localStorage on startup\r\ntry {\r\n  const storedFavorites = JSON.parse(localStorage.getItem('pokeArray')) || [];\r\n  favorites = new Set(storedFavorites.map(pokemon => pokemon.id)); // Store only the IDs in the Set\r\n} catch (error) {\r\n  console.error('Error loading favorites:', error);\r\n}\r\n\r\n// Functions\r\nasync function fetchPokemon(id) {\r\n  try {\r\n    const response = await fetch(`${POKEMON_API_BASE_URL}/pokemon/${id}`);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching Pokemon:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction createPokemonCard(pokemon) {\r\n  // Skip if this Pokemon has already been loaded\r\n  if (loadedPokemon.has(pokemon.id)) {\r\n    return null;\r\n  }\r\n  loadedPokemon.add(pokemon.id);\r\n\r\n  const card = document.createElement('div');\r\n  card.className =\r\n    'bg-white rounded-lg shadow-lg p-4 transform hover:scale-105 transition-transform';\r\n  card.dataset.pokemonId = pokemon.id;\r\n\r\n  // Create image\r\n  const img = document.createElement('img');\r\n  img.src =\r\n    pokemon.sprites.other['official-artwork'].front_default ||\r\n    pokemon.sprites.front_default;\r\n  img.alt = pokemon.name;\r\n  img.className = 'w-full h-48 object-contain mb-4';\r\n  card.appendChild(img);\r\n\r\n  //create name + fav button container\r\n  const nameFavcontainer = document.createElement('div');\r\n  nameFavcontainer.className = 'flex w-full justify-between';\r\n  card.appendChild(nameFavcontainer);\r\n\r\n  // Create name\r\n  const name = document.createElement('h3');\r\n  name.className = 'text-xl font-bold capitalize mb-2';\r\n  name.textContent = pokemon.name;\r\n  nameFavcontainer.appendChild(name);\r\n\r\n  // Create Fav button\r\n  const favBtn = document.createElement('img');\r\n  const favePokemonId = pokemon.id; // Taking the pokemon ID\r\n  let favorites = JSON.parse(localStorage.getItem('pokeArray')) || [];\r\n\r\n  // Check if the Pokémon is already in favorites\r\n  let isFavorite = favorites.some(fav => fav.id === pokemon.id);\r\n\r\n  // Define image sources\r\n  const imgUnstored = 'my-react-app/assets/favheartunselected.png';\r\n  const imgHoveredUnstored = 'my-react-app/assets/favhearthovered.png';\r\n  const imgStored = 'my-react-app/assets/favheartselected.png';\r\n\r\n  // Set initial image\r\n  favBtn.src = isFavorite ? imgStored : imgUnstored;\r\n  favBtn.alt = 'favorites button';\r\n  favBtn.className = 'h-7 ml-4 cursor-pointer';\r\n\r\n  // Hover Effect\r\n  favBtn.addEventListener('mouseenter', () => {\r\n    if (!isFavorite) favBtn.src = imgHoveredUnstored;\r\n  });\r\n\r\n  favBtn.addEventListener('mouseleave', () => {\r\n    if (!isFavorite) favBtn.src = imgUnstored;\r\n  });\r\n\r\n  // Click Event - Toggle Favorites\r\n  favBtn.addEventListener('click', () => {\r\n    let favorites = JSON.parse(localStorage.getItem('pokeArray')) || [];\r\n\r\n    if (isFavorite) {\r\n      // Remove from favorites\r\n      favorites = favorites.filter(pokemon => pokemon.id !== favePokemonId);\r\n    } else {\r\n      // Add to favorites (store full Pokémon object)\r\n      favorites.push({\r\n        id: pokemon.id,\r\n        name: pokemon.name,\r\n        image:\r\n          pokemon.sprites.other['official-artwork'].front_default ||\r\n          pokemon.sprites.front_default,\r\n        type: pokemon.types.map(type => type.type.name).join(', '),\r\n        hp: pokemon.stats[0].base_stat,\r\n        attack: pokemon.stats[1].base_stat,\r\n        defense: pokemon.stats[2].base_stat,\r\n        speed: pokemon.stats[5].base_stat,\r\n      });\r\n    }\r\n\r\n    // Update localStorage\r\n    localStorage.setItem('pokeArray', JSON.stringify(favorites));\r\n\r\n    // Update isFavorite state\r\n    isFavorite = !isFavorite;\r\n\r\n    // Update the button image immediately\r\n    favBtn.src = isFavorite ? imgStored : imgUnstored;\r\n\r\n    console.log(pokeArray);\r\n  });\r\n\r\n  nameFavcontainer.appendChild(favBtn);\r\n\r\n  // Create type\r\n  const typeP = document.createElement('p');\r\n  typeP.className = 'text-gray-600 mb-2';\r\n  typeP.textContent =\r\n    'Type: ' + pokemon.types.map(type => type.type.name).join(', ');\r\n  card.appendChild(typeP);\r\n\r\n  // Create stats container\r\n  const statsDiv = document.createElement('div');\r\n  statsDiv.className = 'grid grid-cols-2 gap-2 text-sm mb-4';\r\n\r\n  // Add stats\r\n  const stats = [\r\n    { label: 'HP', value: pokemon.stats[0].base_stat },\r\n    { label: 'Attack', value: pokemon.stats[1].base_stat },\r\n    { label: 'Defense', value: pokemon.stats[2].base_stat },\r\n    { label: 'Speed', value: pokemon.stats[5].base_stat },\r\n  ];\r\n\r\n  stats.forEach(stat => {\r\n    const statP = document.createElement('p');\r\n    statP.textContent = `${stat.label}: ${stat.value}`;\r\n    statsDiv.appendChild(statP);\r\n  });\r\n  card.appendChild(statsDiv);\r\n\r\n  return card;\r\n}\r\n\r\nasync function loadPokemonList(append = false) {\r\n  console.log('Loading Pokemon list...');\r\n  if (loading || !hasMorePokemon) return;\r\n  loading = true;\r\n\r\n  try {\r\n    const startId = (currentPage - 1) * POKEMON_PER_PAGE + 1;\r\n    console.log(`Fetching Pokemon from ID ${startId}`);\r\n\r\n    // Check if we've reached the maximum Pokemon ID\r\n    if (startId > MAX_POKEMON_ID) {\r\n      hasMorePokemon = false;\r\n      return;\r\n    }\r\n\r\n    if (!append) {\r\n      pokemonList.innerHTML = '';\r\n      const loadingMsg = document.createElement('div');\r\n      loadingMsg.className = 'col-span-full text-center';\r\n      loadingMsg.textContent = 'Loading...';\r\n      pokemonList.appendChild(loadingMsg);\r\n      loadedPokemon.clear(); // Reset loaded Pokemon tracking\r\n    }\r\n\r\n    const promises = [];\r\n    const endId = Math.min(startId + POKEMON_PER_PAGE - 1, MAX_POKEMON_ID);\r\n\r\n    for (let i = startId; i <= endId; i++) {\r\n      promises.push(fetchPokemon(i));\r\n    }\r\n\r\n    const pokemons = await Promise.all(promises);\r\n    console.log(`Fetched ${pokemons.length} Pokemon`);\r\n\r\n    if (!append) {\r\n      pokemonList.innerHTML = '';\r\n    }\r\n\r\n    const fragment = document.createDocumentFragment();\r\n    pokemons.forEach(pokemon => {\r\n      if (pokemon) {\r\n        const card = createPokemonCard(pokemon);\r\n        if (card) {\r\n          // Only append if it's a new Pokemon\r\n          fragment.appendChild(card);\r\n        }\r\n      }\r\n    });\r\n    pokemonList.appendChild(fragment);\r\n\r\n    // Check if we've reached the end\r\n    if (endId >= MAX_POKEMON_ID) {\r\n      hasMorePokemon = false;\r\n      const endMessage = document.createElement('div');\r\n      endMessage.className = 'col-span-full text-center text-gray-600 py-4';\r\n      endMessage.textContent = \"You've reached the end of the Pokedex!\";\r\n      pokemonList.appendChild(endMessage);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading Pokemon list:', error);\r\n    if (!append) {\r\n      pokemonList.innerHTML = '';\r\n      const errorMsg = document.createElement('div');\r\n      errorMsg.className = 'col-span-full text-center text-red-600';\r\n      errorMsg.textContent = 'Error loading Pokemon. Please try again.';\r\n      pokemonList.appendChild(errorMsg);\r\n    }\r\n  } finally {\r\n    loading = false;\r\n  }\r\n}\r\n\r\nfunction searchPokemon(query) {\r\n  query = query.toLowerCase().trim(); // Normalize query\r\n\r\n  const allPokemonCards = document.querySelectorAll('#pokemonList > div');\r\n\r\n  // ✅ If the input is empty, show all Pokémon\r\n  if (query === '') {\r\n    allPokemonCards.forEach(card => {\r\n      card.style.display = 'block';\r\n    });\r\n    searchResults.innerHTML = ''; // Clear error messages\r\n    return;\r\n  }\r\n\r\n  let found = false;\r\n\r\n  allPokemonCards.forEach(card => {\r\n    const pokemonName = card.querySelector('h3').textContent.toLowerCase();\r\n    const pokemonID = card.dataset.pokemonId; // Get ID from data attribute\r\n\r\n    if (pokemonName.includes(query) || pokemonID === query) {\r\n      card.style.display = 'block';\r\n      found = true;\r\n    } else {\r\n      card.style.display = 'none';\r\n    }\r\n  });\r\n\r\n  // Handle case where no Pokémon match\r\n  searchResults.innerHTML = '';\r\n  if (!found) {\r\n    const errorMsg = document.createElement('p');\r\n    errorMsg.className = 'text-red-600 font-bold text-center';\r\n    errorMsg.textContent = 'Pokémon not found. Try a different name or ID.';\r\n    searchResults.appendChild(errorMsg);\r\n    searchModal.classList.remove('hidden');\r\n  }\r\n}\r\n\r\n// Event Listeners\r\n// Reset the search when typing\r\nsearchInput.addEventListener('input', () => {\r\n  if (searchInput.value.trim() === '') {\r\n    loadPokemonList(); // Reloads all Pokémon when input is empty\r\n  }\r\n});\r\n\r\n// Execute search only on button click\r\nsearchButton.addEventListener('click', () => {\r\n  const searchText = searchInput.value.trim().toLowerCase();\r\n  if (searchText) {\r\n    searchPokemon(searchText); // Calls the search function only on click\r\n  }\r\n});\r\n\r\ncloseModal.addEventListener('click', () => {\r\n  searchModal.classList.add('hidden');\r\n});\r\n\r\n// Initialize\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  console.log('DOM loaded, starting Pokemon fetch');\r\n  loadPokemonList(false);\r\n});\r\n\r\n// Improved infinite scroll with Intersection Observer\r\nconst observerOptions = {\r\n  root: null,\r\n  rootMargin: '100px',\r\n  threshold: 0.1,\r\n};\r\n\r\nconst observer = new IntersectionObserver(entries => {\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting && !loading && hasMorePokemon) {\r\n      currentPage++;\r\n      loadPokemonList(true);\r\n    }\r\n  });\r\n}, observerOptions);\r\n\r\n// Add a sentinel element for infinite scroll\r\nconst sentinel = document.createElement('div');\r\nsentinel.className = 'h-10';\r\npokemonList.appendChild(sentinel);\r\nobserver.observe(sentinel);\r\n"],"names":[],"version":3,"file":"my-react-app.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}